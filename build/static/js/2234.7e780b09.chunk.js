(self.webpackChunkparticle_auth_cra=self.webpackChunkparticle_auth_cra||[]).push([[2234],{92234:(e,t,o)=>{"use strict";o.r(t),o.d(t,{fromCognitoIdentity:()=>l,fromCognitoIdentityPool:()=>w,fromHttp:()=>C,fromTemporaryCredentials:()=>I,fromWebToken:()=>b});var n=o(43419);function r(e){return Promise.all(Object.keys(e).reduce(((t,o)=>{const n=e[o];return"string"===typeof n?t.push([o,n]):t.push(n().then((e=>[o,e]))),t}),[])).then((e=>e.reduce(((e,t)=>{let[o,n]=t;return e[o]=n,e}),{})))}function i(e){return async()=>{var t,n,i,l,d,u;null===(t=e.logger)||void 0===t||t.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const{GetCredentialsForIdentityCommand:g,CognitoIdentityClient:m}=await Promise.all([o.e(2830),o.e(5487),o.e(1012)]).then(o.bind(o,11012)),{Credentials:{AccessKeyId:h=s(e.logger),Expiration:w,SecretKey:f=a(e.logger),SessionToken:y}=c(e.logger)}=await(null!==(n=e.client)&&void 0!==n?n:new m(Object.assign({},null!==(i=e.clientConfig)&&void 0!==i?i:{},{region:null!==(l=null===(d=e.clientConfig)||void 0===d?void 0:d.region)&&void 0!==l?l:null===(u=e.parentClientConfig)||void 0===u?void 0:u.region}))).send(new g({CustomRoleArn:e.customRoleArn,IdentityId:e.identityId,Logins:e.logins?await r(e.logins):void 0}));return{identityId:e.identityId,accessKeyId:h,secretAccessKey:f,sessionToken:y,expiration:w}}}function s(e){throw new n.C1("Response from Amazon Cognito contained no access key ID",{logger:e})}function c(e){throw new n.C1("Response from Amazon Cognito contained no credentials",{logger:e})}function a(e){throw new n.C1("Response from Amazon Cognito contained no secret key",{logger:e})}const l=e=>i({...e}),d="IdentityIds";class u{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"aws:cognito-identity-ids";this.dbName=e}getItem(e){return this.withObjectStore("readonly",(t=>{const o=t.get(e);return new Promise((e=>{o.onerror=()=>e(null),o.onsuccess=()=>e(o.result?o.result.value:null)}))})).catch((()=>null))}removeItem(e){return this.withObjectStore("readwrite",(t=>{const o=t.delete(e);return new Promise(((e,t)=>{o.onerror=()=>t(o.error),o.onsuccess=()=>e()}))}))}setItem(e,t){return this.withObjectStore("readwrite",(o=>{const n=o.put({id:e,value:t});return new Promise(((e,t)=>{n.onerror=()=>t(n.error),n.onsuccess=()=>e()}))}))}getDb(){const e=self.indexedDB.open(this.dbName,1);return new Promise(((t,o)=>{e.onsuccess=()=>{t(e.result)},e.onerror=()=>{o(e.error)},e.onblocked=()=>{o(new Error("Unable to access DB"))},e.onupgradeneeded=()=>{const t=e.result;t.onerror=()=>{o(new Error("Failed to create object store"))},t.createObjectStore(d,{keyPath:"id"})}}))}withObjectStore(e,t){return this.getDb().then((o=>{const n=o.transaction(d,e);return n.oncomplete=()=>o.close(),new Promise(((e,o)=>{n.onerror=()=>o(n.error),e(t(n.objectStore(d)))})).catch((e=>{throw o.close(),e}))}))}}const g=new class{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.store=e}getItem(e){return e in this.store?this.store[e]:null}removeItem(e){delete this.store[e]}setItem(e,t){this.store[e]=t}};function m(){return"object"===typeof self&&self.indexedDB?new u:"object"===typeof window&&window.localStorage?window.localStorage:g}function h(e){throw new n.C1("Response from Amazon Cognito contained no identity ID",{logger:e})}const w=e=>function(e){let{accountId:t,cache:n=m(),client:s,clientConfig:c,customRoleArn:a,identityPoolId:l,logins:d,userIdentifier:u=(d&&0!==Object.keys(d).length?void 0:"ANONYMOUS"),logger:g,parentClientConfig:w}=e;null===g||void 0===g||g.debug("@aws-sdk/credential-provider-cognito-identity - fromCognitoIdentity");const f=u?"aws:cognito-identity-credentials:".concat(l,":").concat(u):void 0;let y=async()=>{var e;const{GetIdCommand:u,CognitoIdentityClient:m}=await Promise.all([o.e(2830),o.e(5487),o.e(1012)]).then(o.bind(o,11012)),p=null!==s&&void 0!==s?s:new m(Object.assign({},null!==c&&void 0!==c?c:{},{region:null!==(e=null===c||void 0===c?void 0:c.region)&&void 0!==e?e:null===w||void 0===w?void 0:w.region}));let v=f&&await n.getItem(f);if(!v){const{IdentityId:e=h(g)}=await p.send(new u({AccountId:t,IdentityPoolId:l,Logins:d?await r(d):void 0}));v=e,f&&Promise.resolve(n.setItem(f,v)).catch((()=>{}))}return y=i({client:p,customRoleArn:a,logins:d,identityId:v}),y()};return()=>y().catch((async e=>{throw f&&Promise.resolve(n.removeItem(f)).catch((()=>{})),e}))}({...e});var f=o(28344);var y=o(92776),p=o(20889),v=o(56346);const C=function(){var e,t,o;let r,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};null===(e=i.logger)||void 0===e||e.debug("@aws-sdk/credential-provider-http - fromHttp");const s=i.credentialsFullUri;if(!s)throw new n.C1("No HTTP credential provider host provided.",{logger:i.logger});r=s;const c=new URL(r);((e,t)=>{if("https:"!==e.protocol&&"169.254.170.2"!==e.hostname&&"169.254.170.23"!==e.hostname&&"[fd00:ec2::23]"!==e.hostname){if(e.hostname.includes("[")){if("[::1]"===e.hostname||"[0000:0000:0000:0000:0000:0000:0000:0001]"===e.hostname)return}else{if("localhost"===e.hostname)return;const t=e.hostname.split("."),o=e=>{const t=parseInt(e,10);return 0<=t&&t<=255};if("127"===t[0]&&o(t[1])&&o(t[2])&&o(t[3])&&4===t.length)return}throw new n.C1("URL not accepted. It must either be HTTPS or match one of the following:\n  - loopback CIDR 127.0.0.0/8 or [::1/128]\n  - ECS container host 169.254.170.2\n  - EKS container host 169.254.170.23 or [fd00:ec2::23]",{logger:t})}})(c,i.logger);const a=new f.NC;return l=async()=>{const e=function(e){return new y.Kd({protocol:e.protocol,hostname:e.hostname,port:Number(e.port),path:e.pathname,query:Array.from(e.searchParams.entries()).reduce(((e,t)=>{let[o,n]=t;return e[o]=n,e}),{}),fragment:e.hash})}(c);return i.authorizationToken&&(e.headers.Authorization=i.authorizationToken),async function(e,t){const o=(0,v.c9)(e.body),r=await o.transformToString();if(200===e.statusCode){const e=JSON.parse(r);if("string"!==typeof e.AccessKeyId||"string"!==typeof e.SecretAccessKey||"string"!==typeof e.Token||"string"!==typeof e.Expiration)throw new n.C1("HTTP credential provider response not of the required format, an object matching: { AccessKeyId: string, SecretAccessKey: string, Token: string, Expiration: string(rfc3339) }",{logger:t});return{accessKeyId:e.AccessKeyId,secretAccessKey:e.SecretAccessKey,sessionToken:e.Token,expiration:(0,p.EI)(e.Expiration)}}if(e.statusCode>=400&&e.statusCode<500){let o={};try{o=JSON.parse(r)}catch(i){}throw Object.assign(new n.C1("Server responded with status: ".concat(e.statusCode),{logger:t}),{Code:o.Code,Message:o.Message})}throw new n.C1("Server responded with status: ".concat(e.statusCode),{logger:t})}((await a.handle(e)).response)},d=null!==(t=i.maxRetries)&&void 0!==t?t:3,u=null!==(o=i.timeout)&&void 0!==o?o:1e3,async()=>{for(let t=0;t<d;++t)try{return await l()}catch(e){await new Promise((e=>setTimeout(e,u)))}return await l()};var l,d,u},I=e=>{let t;return async()=>{var r,i;null===(r=e.logger)||void 0===r||r.debug("@aws-sdk/credential-providers - fromTemporaryCredentials (STS)");const s={...e.params,RoleSessionName:null!==(i=e.params.RoleSessionName)&&void 0!==i?i:"aws-sdk-js-"+Date.now()};if(null!==s&&void 0!==s&&s.SerialNumber){if(!e.mfaCodeProvider)throw new n.C1("Temporary credential requires multi-factor authentication, but no MFA code callback was provided.",{tryNextLink:!1,logger:e.logger});s.TokenCode=await e.mfaCodeProvider(null===s||void 0===s?void 0:s.SerialNumber)}const{AssumeRoleCommand:c,STSClient:a}=await Promise.all([o.e(2830),o.e(3518),o.e(712)]).then(o.bind(o,70712));if(t||(t=new a({...e.clientConfig,credentials:e.masterCredentials})),e.clientPlugins)for(const o of e.clientPlugins)t.middlewareStack.use(o);const{Credentials:l}=await t.send(new c(s));if(!l||!l.AccessKeyId||!l.SecretAccessKey)throw new n.C1("Invalid response from STS.assumeRole call with role ".concat(s.RoleArn),{logger:e.logger});return{accessKeyId:l.AccessKeyId,secretAccessKey:l.SecretAccessKey,sessionToken:l.SessionToken,expiration:l.Expiration,credentialScope:l.CredentialScope}}};o(2747);const b=e=>(e=>async()=>{var t;null===(t=e.logger)||void 0===t||t.debug("@aws-sdk/credential-provider-web-identity - fromWebToken");const{roleArn:n,roleSessionName:r,webIdentityToken:i,providerId:s,policyArns:c,policy:a,durationSeconds:l}=e;let{roleAssumerWithWebIdentity:d}=e;if(!d){const{getDefaultRoleAssumerWithWebIdentity:t}=await Promise.all([o.e(2830),o.e(3518),o.e(2427)]).then(o.bind(o,72427));d=t({...e.clientConfig,credentialProviderLogger:e.logger,parentClientConfig:e.parentClientConfig},e.clientPlugins)}return d({RoleArn:n,RoleSessionName:null!==r&&void 0!==r?r:"aws-sdk-js-session-".concat(Date.now()),WebIdentityToken:i,ProviderId:s,PolicyArns:c,Policy:a,DurationSeconds:l})})({...e})},2747:()=>{}}]);
//# sourceMappingURL=2234.7e780b09.chunk.js.map