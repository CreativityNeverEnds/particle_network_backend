{"version":3,"file":"static/js/3518.b7d26bf0.chunk.js","mappings":"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","sources":["../node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthSchemeProvider.js","../node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js","../node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js","../node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.browser.js","../node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js","../node_modules/@aws-sdk/client-sts/dist-es/auth/httpAuthExtensionConfiguration.js","../node_modules/@aws-sdk/client-sts/dist-es/STSClient.js","../node_modules/@aws-sdk/client-sts/dist-es/runtimeExtensions.js","../node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js","../node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js","../node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js","../node_modules/@aws-sdk/core/dist-es/submodules/protocols/xml/parseXmlBody.js","../node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js","../node_modules/fast-xml-parser/src/fxp.js","../node_modules/fast-xml-parser/src/util.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","../node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","../node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","../node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","../node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","../node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","../node_modules/fast-xml-parser/src/xmlparser/node2json.js","../node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","../node_modules/strnum/strnum.js"],"sourcesContent":["import { resolveAwsSdkSigV4Config, } from \"@aws-sdk/core\";\nimport { getSmithyContext, normalizeProvider } from \"@smithy/util-middleware\";\nimport { STSClient } from \"../STSClient\";\nexport const defaultSTSHttpAuthSchemeParametersProvider = async (config, context, input) => {\n    return {\n        operation: getSmithyContext(context).operation,\n        region: (await normalizeProvider(config.region)()) ||\n            (() => {\n                throw new Error(\"expected `region` to be configured for `aws.auth#sigv4`\");\n            })(),\n    };\n};\nfunction createAwsAuthSigv4HttpAuthOption(authParameters) {\n    return {\n        schemeId: \"aws.auth#sigv4\",\n        signingProperties: {\n            name: \"sts\",\n            region: authParameters.region,\n        },\n        propertiesExtractor: (config, context) => ({\n            signingProperties: {\n                config,\n                context,\n            },\n        }),\n    };\n}\nfunction createSmithyApiNoAuthHttpAuthOption(authParameters) {\n    return {\n        schemeId: \"smithy.api#noAuth\",\n    };\n}\nexport const defaultSTSHttpAuthSchemeProvider = (authParameters) => {\n    const options = [];\n    switch (authParameters.operation) {\n        case \"AssumeRoleWithSAML\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        case \"AssumeRoleWithWebIdentity\": {\n            options.push(createSmithyApiNoAuthHttpAuthOption(authParameters));\n            break;\n        }\n        default: {\n            options.push(createAwsAuthSigv4HttpAuthOption(authParameters));\n        }\n    }\n    return options;\n};\nexport const resolveStsAuthConfig = (input) => ({\n    ...input,\n    stsClientCtor: STSClient,\n});\nexport const resolveHttpAuthSchemeConfig = (config) => {\n    const config_0 = resolveStsAuthConfig(config);\n    const config_1 = resolveAwsSdkSigV4Config(config_0);\n    return {\n        ...config_1,\n    };\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"stringEquals\", e = \"sigv4\", f = \"sts\", g = \"us-east-1\", h = \"endpoint\", i = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", j = \"tree\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": e, \"signingName\": f, \"signingRegion\": g }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: d, [I]: [q, \"aws-global\"] }], [h]: u, [G]: h }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], rules: [{ conditions: [{ [H]: d, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: h }, w, { conditions: [{ [H]: d, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, g] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: h }, { conditions: [{ [H]: d, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: h }, { endpoint: { url: i, properties: { authSchemes: [{ name: e, signingName: f, signingRegion: \"{Region}\" }] }, headers: v }, [G]: h }], [G]: j }, { conditions: C, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: h }], [G]: j }, { conditions: [p], rules: [{ conditions: [r], rules: [{ conditions: [x, y], rules: [{ conditions: [{ [H]: c, [I]: [b, z] }, B], rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }], [G]: j }, { conditions: D, rules: [{ conditions: [{ [H]: c, [I]: [z, b] }], rules: [{ conditions: [{ [H]: d, [I]: [{ [H]: l, [I]: [A, \"name\"] }, \"aws-us-gov\"] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: h }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }], [G]: j }, { conditions: E, rules: [{ conditions: [B], rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: h }], [G]: j }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }], [G]: j }, w, { endpoint: { url: i, properties: v, headers: v }, [G]: h }], [G]: j }], [G]: j }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] };\nexport const ruleSet = _data;\n","import { awsEndpointFunctions } from \"@aws-sdk/util-endpoints\";\nimport { customEndpointFunctions, EndpointCache, resolveEndpoint } from \"@smithy/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nconst cache = new EndpointCache({\n    size: 50,\n    params: [\"Endpoint\", \"Region\", \"UseDualStack\", \"UseFIPS\", \"UseGlobalEndpoint\"],\n});\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return cache.get(endpointParams, () => resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    }));\n};\ncustomEndpointFunctions.aws = awsEndpointFunctions;\n","import packageInfo from \"../package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { DEFAULT_USE_DUALSTACK_ENDPOINT, DEFAULT_USE_FIPS_ENDPOINT } from \"@smithy/config-resolver\";\nimport { FetchHttpHandler as RequestHandler, streamCollector } from \"@smithy/fetch-http-handler\";\nimport { invalidProvider } from \"@smithy/invalid-dependency\";\nimport { calculateBodyLength } from \"@smithy/util-body-length-browser\";\nimport { DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE } from \"@smithy/util-retry\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@smithy/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@smithy/util-defaults-mode-browser\";\nexport const getRuntimeConfig = (config) => {\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"browser\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? ((_) => () => Promise.reject(new Error(\"Credential is missing\"))),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? DEFAULT_MAX_ATTEMPTS,\n        region: config?.region ?? invalidProvider(\"Region is missing\"),\n        requestHandler: RequestHandler.create(config?.requestHandler ?? defaultConfigProvider),\n        retryMode: config?.retryMode ?? (async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE),\n        sha256: config?.sha256 ?? Sha256,\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? (() => Promise.resolve(DEFAULT_USE_DUALSTACK_ENDPOINT)),\n        useFipsEndpoint: config?.useFipsEndpoint ?? (() => Promise.resolve(DEFAULT_USE_FIPS_ENDPOINT)),\n    };\n};\n","import { AwsSdkSigV4Signer } from \"@aws-sdk/core\";\nimport { NoAuthSigner } from \"@smithy/core\";\nimport { NoOpLogger } from \"@smithy/smithy-client\";\nimport { parseUrl } from \"@smithy/url-parser\";\nimport { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { defaultSTSHttpAuthSchemeProvider } from \"./auth/httpAuthSchemeProvider\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => {\n    return {\n        apiVersion: \"2011-06-15\",\n        base64Decoder: config?.base64Decoder ?? fromBase64,\n        base64Encoder: config?.base64Encoder ?? toBase64,\n        disableHostPrefix: config?.disableHostPrefix ?? false,\n        endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n        extensions: config?.extensions ?? [],\n        httpAuthSchemeProvider: config?.httpAuthSchemeProvider ?? defaultSTSHttpAuthSchemeProvider,\n        httpAuthSchemes: config?.httpAuthSchemes ?? [\n            {\n                schemeId: \"aws.auth#sigv4\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"aws.auth#sigv4\"),\n                signer: new AwsSdkSigV4Signer(),\n            },\n            {\n                schemeId: \"smithy.api#noAuth\",\n                identityProvider: (ipc) => ipc.getIdentityProvider(\"smithy.api#noAuth\") || (async () => ({})),\n                signer: new NoAuthSigner(),\n            },\n        ],\n        logger: config?.logger ?? new NoOpLogger(),\n        serviceId: config?.serviceId ?? \"STS\",\n        urlParser: config?.urlParser ?? parseUrl,\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","export const getHttpAuthExtensionConfiguration = (runtimeConfig) => {\n    const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;\n    let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;\n    let _credentials = runtimeConfig.credentials;\n    return {\n        setHttpAuthScheme(httpAuthScheme) {\n            const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);\n            if (index === -1) {\n                _httpAuthSchemes.push(httpAuthScheme);\n            }\n            else {\n                _httpAuthSchemes.splice(index, 1, httpAuthScheme);\n            }\n        },\n        httpAuthSchemes() {\n            return _httpAuthSchemes;\n        },\n        setHttpAuthSchemeProvider(httpAuthSchemeProvider) {\n            _httpAuthSchemeProvider = httpAuthSchemeProvider;\n        },\n        httpAuthSchemeProvider() {\n            return _httpAuthSchemeProvider;\n        },\n        setCredentials(credentials) {\n            _credentials = credentials;\n        },\n        credentials() {\n            return _credentials;\n        },\n    };\n};\nexport const resolveHttpAuthRuntimeConfig = (config) => {\n    return {\n        httpAuthSchemes: config.httpAuthSchemes(),\n        httpAuthSchemeProvider: config.httpAuthSchemeProvider(),\n        credentials: config.credentials(),\n    };\n};\n","import { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { resolveRegionConfig } from \"@smithy/config-resolver\";\nimport { DefaultIdentityProviderConfig, getHttpAuthSchemeEndpointRuleSetPlugin, getHttpSigningPlugin, } from \"@smithy/core\";\nimport { getContentLengthPlugin } from \"@smithy/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@smithy/middleware-endpoint\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@smithy/middleware-retry\";\nimport { Client as __Client, } from \"@smithy/smithy-client\";\nimport { defaultSTSHttpAuthSchemeParametersProvider, resolveHttpAuthSchemeConfig, } from \"./auth/httpAuthSchemeProvider\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nimport { resolveRuntimeExtensions } from \"./runtimeExtensions\";\nexport { __Client };\nexport class STSClient extends __Client {\n    constructor(...[configuration]) {\n        const _config_0 = __getRuntimeConfig(configuration || {});\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveUserAgentConfig(_config_1);\n        const _config_3 = resolveRetryConfig(_config_2);\n        const _config_4 = resolveRegionConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveEndpointConfig(_config_5);\n        const _config_7 = resolveHttpAuthSchemeConfig(_config_6);\n        const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getHttpAuthSchemeEndpointRuleSetPlugin(this.config, {\n            httpAuthSchemeParametersProvider: defaultSTSHttpAuthSchemeParametersProvider,\n            identityProviderConfigProvider: async (config) => new DefaultIdentityProviderConfig({\n                \"aws.auth#sigv4\": config.credentials,\n            }),\n        }));\n        this.middlewareStack.use(getHttpSigningPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { getAwsRegionExtensionConfiguration, resolveAwsRegionExtensionConfiguration, } from \"@aws-sdk/region-config-resolver\";\nimport { getHttpHandlerExtensionConfiguration, resolveHttpHandlerRuntimeConfig } from \"@smithy/protocol-http\";\nimport { getDefaultExtensionConfiguration, resolveDefaultRuntimeConfig } from \"@smithy/smithy-client\";\nimport { getHttpAuthExtensionConfiguration, resolveHttpAuthRuntimeConfig } from \"./auth/httpAuthExtensionConfiguration\";\nconst asPartial = (t) => t;\nexport const resolveRuntimeExtensions = (runtimeConfig, extensions) => {\n    const extensionConfiguration = {\n        ...asPartial(getAwsRegionExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getDefaultExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpHandlerExtensionConfiguration(runtimeConfig)),\n        ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig)),\n    };\n    extensions.forEach((extension) => extension.configure(extensionConfiguration));\n    return {\n        ...runtimeConfig,\n        ...resolveAwsRegionExtensionConfiguration(extensionConfiguration),\n        ...resolveDefaultRuntimeConfig(extensionConfiguration),\n        ...resolveHttpHandlerRuntimeConfig(extensionConfiguration),\n        ...resolveHttpAuthRuntimeConfig(extensionConfiguration),\n    };\n};\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\nexport const commonParams = {\n    UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n    UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n    Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n    Region: { type: \"builtInParams\", name: \"region\" },\n    UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n};\n","import { ServiceException as __ServiceException, } from \"@smithy/smithy-client\";\nexport { __ServiceException };\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@smithy/smithy-client\";\nimport { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport class IDPCommunicationErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexport class InvalidAuthorizationMessageException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SecretAccessKey && { SecretAccessKey: SENSITIVE_STRING }),\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.SAMLAssertion && { SAMLAssertion: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.WebIdentityToken && { WebIdentityToken: SENSITIVE_STRING }),\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetFederationTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\nexport const GetSessionTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Credentials && { Credentials: CredentialsFilterSensitiveLog(obj.Credentials) }),\n});\n","import { getValueFromTextNode } from \"@smithy/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { collectBodyString } from \"../common\";\nexport const parseXmlBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        let parsedObj;\n        try {\n            parsedObj = parser.parse(encoded, true);\n        }\n        catch (e) {\n            if (e && typeof e === \"object\") {\n                Object.defineProperty(e, \"$responseBodyText\", {\n                    value: encoded,\n                });\n            }\n            throw e;\n        }\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nexport const parseXmlErrorBody = async (errorBody, context) => {\n    const value = await parseXmlBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nexport const loadRestXmlErrorCode = (output, data) => {\n    if (data?.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (data?.Code !== undefined) {\n        return data.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { parseXmlBody as parseBody, parseXmlErrorBody as parseErrorBody } from \"@aws-sdk/core\";\nimport { HttpRequest as __HttpRequest } from \"@smithy/protocol-http\";\nimport { collectBody, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@smithy/smithy-client\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidAuthorizationMessageException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        [_A]: _AR,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithSAMLRequest(input, context),\n        [_A]: _ARWSAML,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        [_A]: _ARWWI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DecodeAuthorizationMessageRequest(input, context),\n        [_A]: _DAM,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetAccessKeyInfoCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyInfoRequest(input, context),\n        [_A]: _GAKI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCallerIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetCallerIdentityRequest(input, context),\n        [_A]: _GCI,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetFederationTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetFederationTokenRequest(input, context),\n        [_A]: _GFT,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetSessionTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSessionTokenRequest(input, context),\n        [_A]: _GST,\n        [_V]: _,\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_DecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nexport const de_GetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n    const exception = new InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_TTK] != null) {\n        const memberEntries = se_tagKeyListType(input[_TTK], context);\n        if (input[_TTK]?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_EI] != null) {\n        entries[_EI] = input[_EI];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    if (input[_SI] != null) {\n        entries[_SI] = input[_SI];\n    }\n    if (input[_PC] != null) {\n        const memberEntries = se_ProvidedContextsListType(input[_PC], context);\n        if (input[_PC]?.length === 0) {\n            entries.ProvidedContexts = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `ProvidedContexts.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_AssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_PAr] != null) {\n        entries[_PAr] = input[_PAr];\n    }\n    if (input[_SAMLA] != null) {\n        entries[_SAMLA] = input[_SAMLA];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input[_RA] != null) {\n        entries[_RA] = input[_RA];\n    }\n    if (input[_RSN] != null) {\n        entries[_RSN] = input[_RSN];\n    }\n    if (input[_WIT] != null) {\n        entries[_WIT] = input[_WIT];\n    }\n    if (input[_PI] != null) {\n        entries[_PI] = input[_PI];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    return entries;\n};\nconst se_DecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input[_EM] != null) {\n        entries[_EM] = input[_EM];\n    }\n    return entries;\n};\nconst se_GetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input[_AKI] != null) {\n        entries[_AKI] = input[_AKI];\n    }\n    return entries;\n};\nconst se_GetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst se_GetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input[_N] != null) {\n        entries[_N] = input[_N];\n    }\n    if (input[_P] != null) {\n        entries[_P] = input[_P];\n    }\n    if (input[_PA] != null) {\n        const memberEntries = se_policyDescriptorListType(input[_PA], context);\n        if (input[_PA]?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_T] != null) {\n        const memberEntries = se_tagListType(input[_T], context);\n        if (input[_T]?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input[_DS] != null) {\n        entries[_DS] = input[_DS];\n    }\n    if (input[_SN] != null) {\n        entries[_SN] = input[_SN];\n    }\n    if (input[_TC] != null) {\n        entries[_TC] = input[_TC];\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input[_a] != null) {\n        entries[_a] = input[_a];\n    }\n    return entries;\n};\nconst se_ProvidedContext = (input, context) => {\n    const entries = {};\n    if (input[_PAro] != null) {\n        entries[_PAro] = input[_PAro];\n    }\n    if (input[_CA] != null) {\n        entries[_CA] = input[_CA];\n    }\n    return entries;\n};\nconst se_ProvidedContextsListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_ProvidedContext(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input[_K] != null) {\n        entries[_K] = input[_K];\n    }\n    if (input[_Va] != null) {\n        entries[_Va] = input[_Va];\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[_ARI] != null) {\n        contents[_ARI] = __expectString(output[_ARI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_S] != null) {\n        contents[_S] = __expectString(output[_S]);\n    }\n    if (output[_ST] != null) {\n        contents[_ST] = __expectString(output[_ST]);\n    }\n    if (output[_I] != null) {\n        contents[_I] = __expectString(output[_I]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_NQ] != null) {\n        contents[_NQ] = __expectString(output[_NQ]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_SFWIT] != null) {\n        contents[_SFWIT] = __expectString(output[_SFWIT]);\n    }\n    if (output[_ARU] != null) {\n        contents[_ARU] = de_AssumedRoleUser(output[_ARU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    if (output[_Pr] != null) {\n        contents[_Pr] = __expectString(output[_Pr]);\n    }\n    if (output[_Au] != null) {\n        contents[_Au] = __expectString(output[_Au]);\n    }\n    if (output[_SI] != null) {\n        contents[_SI] = __expectString(output[_SI]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[_AKI] != null) {\n        contents[_AKI] = __expectString(output[_AKI]);\n    }\n    if (output[_SAK] != null) {\n        contents[_SAK] = __expectString(output[_SAK]);\n    }\n    if (output[_STe] != null) {\n        contents[_STe] = __expectString(output[_STe]);\n    }\n    if (output[_E] != null) {\n        contents[_E] = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[_E]));\n    }\n    return contents;\n};\nconst de_DecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {};\n    if (output[_DM] != null) {\n        contents[_DM] = __expectString(output[_DM]);\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_FederatedUser = (output, context) => {\n    const contents = {};\n    if (output[_FUI] != null) {\n        contents[_FUI] = __expectString(output[_FUI]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_GetAccessKeyInfoResponse = (output, context) => {\n    const contents = {};\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    return contents;\n};\nconst de_GetCallerIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[_UI] != null) {\n        contents[_UI] = __expectString(output[_UI]);\n    }\n    if (output[_Ac] != null) {\n        contents[_Ac] = __expectString(output[_Ac]);\n    }\n    if (output[_Ar] != null) {\n        contents[_Ar] = __expectString(output[_Ar]);\n    }\n    return contents;\n};\nconst de_GetFederationTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    if (output[_FU] != null) {\n        contents[_FU] = de_FederatedUser(output[_FU], context);\n    }\n    if (output[_PPS] != null) {\n        contents[_PPS] = __strictParseInt32(output[_PPS]);\n    }\n    return contents;\n};\nconst de_GetSessionTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[_C] != null) {\n        contents[_C] = de_Credentials(output[_C], context);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidAuthorizationMessageException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[_m] != null) {\n        contents[_m] = __expectString(output[_m]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst _ = \"2011-06-15\";\nconst _A = \"Action\";\nconst _AKI = \"AccessKeyId\";\nconst _AR = \"AssumeRole\";\nconst _ARI = \"AssumedRoleId\";\nconst _ARU = \"AssumedRoleUser\";\nconst _ARWSAML = \"AssumeRoleWithSAML\";\nconst _ARWWI = \"AssumeRoleWithWebIdentity\";\nconst _Ac = \"Account\";\nconst _Ar = \"Arn\";\nconst _Au = \"Audience\";\nconst _C = \"Credentials\";\nconst _CA = \"ContextAssertion\";\nconst _DAM = \"DecodeAuthorizationMessage\";\nconst _DM = \"DecodedMessage\";\nconst _DS = \"DurationSeconds\";\nconst _E = \"Expiration\";\nconst _EI = \"ExternalId\";\nconst _EM = \"EncodedMessage\";\nconst _FU = \"FederatedUser\";\nconst _FUI = \"FederatedUserId\";\nconst _GAKI = \"GetAccessKeyInfo\";\nconst _GCI = \"GetCallerIdentity\";\nconst _GFT = \"GetFederationToken\";\nconst _GST = \"GetSessionToken\";\nconst _I = \"Issuer\";\nconst _K = \"Key\";\nconst _N = \"Name\";\nconst _NQ = \"NameQualifier\";\nconst _P = \"Policy\";\nconst _PA = \"PolicyArns\";\nconst _PAr = \"PrincipalArn\";\nconst _PAro = \"ProviderArn\";\nconst _PC = \"ProvidedContexts\";\nconst _PI = \"ProviderId\";\nconst _PPS = \"PackedPolicySize\";\nconst _Pr = \"Provider\";\nconst _RA = \"RoleArn\";\nconst _RSN = \"RoleSessionName\";\nconst _S = \"Subject\";\nconst _SAK = \"SecretAccessKey\";\nconst _SAMLA = \"SAMLAssertion\";\nconst _SFWIT = \"SubjectFromWebIdentityToken\";\nconst _SI = \"SourceIdentity\";\nconst _SN = \"SerialNumber\";\nconst _ST = \"SubjectType\";\nconst _STe = \"SessionToken\";\nconst _T = \"Tags\";\nconst _TC = \"TokenCode\";\nconst _TTK = \"TransitiveTagKeys\";\nconst _UI = \"UserId\";\nconst _V = \"Version\";\nconst _Va = \"Value\";\nconst _WIT = \"WebIdentityToken\";\nconst _a = \"arn\";\nconst _m = \"message\";\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else if (tags.length === 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' has not been opened.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n  oneListGroup: false\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if(!Object.prototype.hasOwnProperty.call(jObj, key)) continue;\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node only if it is not an attribute\n      if (this.isAttribute(key)) {\n        val += '';\n      }\n    } else if (jObj[key] === null) {\n      // null attribute should be ignored by the attribute list, but should not cause the tag closing\n      if (this.isAttribute(key)) {\n        val += '';\n      } else if (key[0] === '?') {\n        val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      } else {\n        val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      }\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      let listTagVal = \"\";\n      let listTagAttr = \"\";\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          if(this.options.oneListGroup){\n            const result = this.j2x(item, level + 1);\n            listTagVal += result.val;\n            if (this.options.attributesGroupName && item.hasOwnProperty(this.options.attributesGroupName)) {\n              listTagAttr += result.attrStr\n            }\n          }else{\n            listTagVal += this.processTextOrObjNode(item, key, level)\n          }\n        } else {\n          if (this.options.oneListGroup) {\n            let textValue = this.options.tagValueProcessor(key, item);\n            textValue = this.replaceEntitiesValue(textValue);\n            listTagVal += textValue;\n          } else {\n            listTagVal += this.buildTextValNode(item, key, '', level);\n          }\n        }\n      }\n      if(this.options.oneListGroup){\n        listTagVal = this.buildObjectNode(listTagVal, key, listTagAttr, level);\n      }\n      val += listTagVal;\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    // attrStr is an empty string in case the attribute came as undefined or null\n    if ((attrStr || attrStr === '') && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix) && name !== this.options.textNodeName) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        if(tagName === undefined) continue;\n\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if(!obj.hasOwnProperty(key)) continue;\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            if(!attrMap.hasOwnProperty(attr)) continue;\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","const util = require('../util');\n\n//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) { //Determine the tag type\n                if( hasBody && isEntity(xmlData, i)){\n                    i += 7; \n                    [entityName, val,i] = readEntityExp(xmlData,i+1);\n                    if(val.indexOf(\"&\") === -1) //Parameter entities are not supported\n                        entities[ validateEntityName(entityName) ] = {\n                            regx : RegExp( `&${entityName};`,\"g\"),\n                            val: val\n                        };\n                }\n                else if( hasBody && isElement(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isAttlist(xmlData, i))  i += 8;//Not supported\n                else if( hasBody && isNotation(xmlData, i)) i += 9;//Not supported\n                else if( isComment)                         comment = true;\n                else                                        throw new Error(\"Invalid DOCTYPE\");\n\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') { //Read tag content\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nfunction readEntityExp(xmlData,i){\n    //External entities are not supported\n    //    <!ENTITY ext SYSTEM \"http://normal-website.com\" >\n\n    //Parameter entities are not supported\n    //    <!ENTITY entityname \"&anotherElement;\">\n\n    //Internal entities are supported\n    //    <!ENTITY entityname \"replacement text\">\n    \n    //read EntityName\n    let entityName = \"\";\n    for (; i < xmlData.length && (xmlData[i] !== \"'\" && xmlData[i] !== '\"' ); i++) {\n        // if(xmlData[i] === \" \") continue;\n        // else \n        entityName += xmlData[i];\n    }\n    entityName = entityName.trim();\n    if(entityName.indexOf(\" \") !== -1) throw new Error(\"External entites are not supported\");\n\n    //read Entity Value\n    const startChar = xmlData[i++];\n    let val = \"\"\n    for (; i < xmlData.length && xmlData[i] !== startChar ; i++) {\n        val += xmlData[i];\n    }\n    return [entityName, val, i];\n}\n\nfunction isComment(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === '-' &&\n    xmlData[i+3] === '-') return true\n    return false\n}\nfunction isEntity(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'N' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'I' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'Y') return true\n    return false\n}\nfunction isElement(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'E' &&\n    xmlData[i+3] === 'L' &&\n    xmlData[i+4] === 'E' &&\n    xmlData[i+5] === 'M' &&\n    xmlData[i+6] === 'E' &&\n    xmlData[i+7] === 'N' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\n\nfunction isAttlist(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'A' &&\n    xmlData[i+3] === 'T' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'L' &&\n    xmlData[i+6] === 'I' &&\n    xmlData[i+7] === 'S' &&\n    xmlData[i+8] === 'T') return true\n    return false\n}\nfunction isNotation(xmlData, i){\n    if(xmlData[i+1] === '!' &&\n    xmlData[i+2] === 'N' &&\n    xmlData[i+3] === 'O' &&\n    xmlData[i+4] === 'T' &&\n    xmlData[i+5] === 'A' &&\n    xmlData[i+6] === 'T' &&\n    xmlData[i+7] === 'I' &&\n    xmlData[i+8] === 'O' &&\n    xmlData[i+9] === 'N') return true\n    return false\n}\n\nfunction validateEntityName(name){\n    if (util.isName(name))\n\treturn name;\n    else\n        throw new Error(`Invalid entity name ${name}`);\n}\n\nmodule.exports = readDocType;\n","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n    updateTag: function(tagName, jPath, attrs){\n      return tagName\n    },\n    // skipEmptyListItem: false\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\n// const regx =\n//   '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n//   .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n      \"num_dec\": { regex: /&#([0-9]{1,7});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 10)) },\n      \"num_hex\": { regex: /&#x([0-9a-fA-F]{1,6});/g, val : (_, str) => String.fromCharCode(Number.parseInt(str, 16)) },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n    this.addChild = addChild;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath, tagName) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        //check if last tag of nested tag was unpaired tag\n        const lastTagName = jPath.substring(jPath.lastIndexOf(\".\")+1);\n        if(tagName && this.options.unpairedTags.indexOf(tagName) !== -1 ){\n          throw new Error(`Unpaired tag can not be used as closing tag: </${tagName}>`);\n        }\n        let propIndex = 0\n        if(lastTagName && this.options.unpairedTags.indexOf(lastTagName) !== -1 ){\n          propIndex = jPath.lastIndexOf('.', jPath.lastIndexOf('.')-1)\n          this.tagsNodeStack.pop();\n        }else{\n          propIndex = jPath.lastIndexOf(\".\");\n        }\n        jPath = jPath.substring(0, propIndex);\n\n        currentNode = this.tagsNodeStack.pop();//avoid recursion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath, tagData.tagName);\n          }\n          this.addChild(currentNode, childNode, jPath)\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true, true);\n        if(val == undefined) val = \"\";\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        const rawTagName = result.rawTagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n          jPath = jPath.substring(0, jPath.lastIndexOf(\".\"));\n        }\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) {\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            i = result.closeIndex;\n          }\n          //unpaired tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            \n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, rawTagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${rawTagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          this.addChild(currentNode, childNode, jPath)\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              jPath = jPath.substr(0, jPath.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath, tagName);\n            }\n            this.addChild(currentNode, childNode, jPath)\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nfunction addChild(currentNode, childNode, jPath){\n  const result = this.options.updateTag(childNode.tagname, jPath, childNode[\":@\"])\n  if(result === false){\n  }else if(typeof result === \"string\"){\n    childNode.tagname = result\n    currentNode.addChild(childNode);\n  }else{\n    currentNode.addChild(childNode);\n  }\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-double quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substring(0, separatorIndex);\n    tagExp = tagExp.substring(separatorIndex + 1).trimStart();\n  }\n\n  const rawTagName = tagName;\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n    rawTagName: rawTagName,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const { textNodeName } = options;\n  const propCount = Object.keys(obj).length;\n  \n  if (propCount === 0) {\n    return true;\n  }\n\n  if (\n    propCount === 1 &&\n    (obj[textNodeName] || typeof obj[textNodeName] === \"boolean\" || obj[textNodeName] === 0)\n  ) {\n    return true;\n  }\n\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n"],"names":["defaultSTSHttpAuthSchemeParametersProvider","async","config","context","input","operation","getSmithyContext","region","normalizeProvider","Error","defaultSTSHttpAuthSchemeProvider","authParameters","options","push","schemeId","signingProperties","name","propertiesExtractor","createAwsAuthSigv4HttpAuthOption","resolveHttpAuthSchemeConfig","config_0","stsClientCtor","STSClient","resolveAwsSdkSigV4Config","F","G","H","I","J","a","b","c","d","e","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","A","B","C","D","E","ruleSet","version","parameters","Region","UseDualStack","UseFIPS","Endpoint","UseGlobalEndpoint","rules","conditions","endpoint","url","properties","authSchemes","signingName","signingRegion","headers","error","cache","EndpointCache","size","params","defaultEndpointResolver","endpointParams","arguments","length","undefined","get","resolveEndpoint","logger","customEndpointFunctions","aws","awsEndpointFunctions","getRuntimeConfig","_config$bodyLengthChe","_config$credentialDef","_config$defaultUserAg","_config$maxAttempts","_config$region","_config$requestHandle","_config$retryMode","_config$sha","_config$streamCollect","_config$useDualstackE","_config$useFipsEndpoi","defaultsMode","resolveDefaultsModeConfig","defaultConfigProvider","then","loadConfigsForDefaultMode","clientSharedValues","_config$base64Decoder","_config$base64Encoder","_config$disableHostPr","_config$endpointProvi","_config$extensions","_config$httpAuthSchem","_config$httpAuthSchem2","_config$logger","_config$serviceId","_config$urlParser","_config$utf8Decoder","_config$utf8Encoder","apiVersion","base64Decoder","fromBase64","base64Encoder","toBase64","disableHostPrefix","endpointProvider","extensions","httpAuthSchemeProvider","httpAuthSchemes","identityProvider","ipc","getIdentityProvider","signer","AwsSdkSigV4Signer","NoAuthSigner","NoOpLogger","serviceId","urlParser","parseUrl","utf8Decoder","fromUtf8","utf8Encoder","toUtf8","getSharedRuntimeConfig","runtime","bodyLengthChecker","calculateBodyLength","credentialDefaultProvider","_","Promise","reject","defaultUserAgentProvider","defaultUserAgent","clientVersion","packageInfo","maxAttempts","DEFAULT_MAX_ATTEMPTS","invalidProvider","requestHandler","RequestHandler","create","retryMode","DEFAULT_RETRY_MODE","sha256","Sha256","streamCollector","useDualstackEndpoint","resolve","DEFAULT_USE_DUALSTACK_ENDPOINT","useFipsEndpoint","DEFAULT_USE_FIPS_ENDPOINT","getHttpAuthExtensionConfiguration","runtimeConfig","_httpAuthSchemes","_httpAuthSchemeProvider","_credentials","credentials","setHttpAuthScheme","httpAuthScheme","index","findIndex","scheme","splice","setHttpAuthSchemeProvider","setCredentials","__Client","constructor","_len","_ref","Array","_key","configuration","_config_0","__getRuntimeConfig","_config_1","resolveClientEndpointParameters","_config_2","resolveUserAgentConfig","_config_3","resolveRetryConfig","_config_4","resolveRegionConfig","_config_5","resolveHostHeaderConfig","_config_6","resolveEndpointConfig","_config_8","resolveRuntimeExtensions","extensionConfiguration","getAwsRegionExtensionConfiguration","getDefaultExtensionConfiguration","getHttpHandlerExtensionConfiguration","forEach","extension","configure","resolveAwsRegionExtensionConfiguration","resolveDefaultRuntimeConfig","resolveHttpHandlerRuntimeConfig","super","this","middlewareStack","use","getUserAgentPlugin","getRetryPlugin","getContentLengthPlugin","getHostHeaderPlugin","getLoggerPlugin","getRecursionDetectionPlugin","getHttpAuthSchemeEndpointRuleSetPlugin","httpAuthSchemeParametersProvider","identityProviderConfigProvider","DefaultIdentityProviderConfig","getHttpSigningPlugin","destroy","_options$useDualstack","_options$useFipsEndpo","_options$useGlobalEnd","useGlobalEndpoint","defaultSigningName","commonParams","type","STSServiceException","__ServiceException","Object","setPrototypeOf","prototype","ExpiredTokenException","__BaseException","opts","$fault","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","IDPCommunicationErrorException","InvalidAuthorizationMessageException","CredentialsFilterSensitiveLog","obj","SecretAccessKey","SENSITIVE_STRING","AssumeRoleResponseFilterSensitiveLog","Credentials","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","WebIdentityToken","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","parseXmlBody","streamBody","collectBodyString","encoded","parser","XMLParser","attributeNamePrefix","htmlEntities","ignoreAttributes","ignoreDeclaration","parseTagValue","trimValues","tagValueProcessor","val","trim","includes","parsedObj","addEntity","parse","defineProperty","value","textNodeName","key","keys","parsedObjToReturn","getValueFromTextNode","parseXmlErrorBody","errorBody","_value$Error$message","message","Message","se_AssumeRoleCommand","SHARED_HEADERS","body","buildFormUrlencodedString","se_AssumeRoleRequest","_A","_AR","_V","buildHttpRpcRequest","se_AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityRequest","_ARWWI","de_AssumeRoleCommand","output","statusCode","de_CommandError","data","parseBody","contents","de_AssumeRoleResponse","AssumeRoleResult","$metadata","deserializeMetadata","de_AssumeRoleWithWebIdentityCommand","de_AssumeRoleWithWebIdentityResponse","AssumeRoleWithWebIdentityResult","parsedOutput","parseErrorBody","errorCode","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","de_IDPCommunicationErrorExceptionRes","de_InvalidAuthorizationMessageExceptionRes","parsedBody","throwDefaultError","deserialized","de_ExpiredTokenException","exception","__decorateServiceException","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidAuthorizationMessageException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","entries","_RA","_RSN","_PA","_input$_PA","memberEntries","se_policyDescriptorListType","PolicyArns","loc","concat","_P","_DS","_T","_input$_T","se_tagListType","Tags","_ref2","_TTK","_input$_TTK","se_tagKeyListType","TransitiveTagKeys","_ref3","_EI","_SN","_TC","_SI","_PC","_input$_PC","se_ProvidedContextsListType","ProvidedContexts","_ref4","_WIT","_PI","_input$_PA3","_ref6","counter","entry","se_PolicyDescriptorType","_ref9","_a","se_ProvidedContext","_PAro","_CA","_ref10","se_Tag","_K","_Va","_ref11","de_AssumedRoleUser","_ARI","__expectString","_Ar","_C","de_Credentials","_ARU","_PPS","__strictParseInt32","_SFWIT","_Pr","_Au","_AKI","_SAK","_STe","_E","__expectNonNull","__parseRfc3339DateTimeWithOffset","_m","_ref12","_output$headers$xAmz","httpStatusCode","requestId","extendedRequestId","cfId","withBaseException","path","resolvedHostname","hostname","protocol","port","basePath","method","endsWith","slice","__HttpRequest","formEntries","map","_ref13","__extendedEncodeURIComponent","join","_data$Error","Code","validator","require","XMLBuilder","module","exports","XMLValidator","nameStartChar","nameRegexp","regexName","RegExp","isExist","isEmptyObject","merge","target","arrayMode","len","getValue","isName","string","match","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","util","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validate","assign","tags","tagFound","reachedRoot","err","tagStartPos","closingTag","tagName","substring","msg","result","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","code","line","tagClosed","otg","pop","openPos","col","indexOf","afterAmp","validateAmpersand","JSON","stringify","replace","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","hasOwnProperty","re","validateNumberAmpersand","count","lineNumber","lines","split","buildFromOrderedJs","attributesGroupName","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","attributeValueProcessor","preserveOrder","commentPropName","entities","processEntities","stopNodes","oneListGroup","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","level","j2x","buildTextValNode","buildObjectNode","repeat","startsWith","build","jObj","isArray","arrayNodeName","call","Date","attr","buildAttrPairStr","newval","replaceEntitiesValue","arrLen","listTagVal","listTagAttr","item","textValue","Ks","L","closeTag","tagEndExp","piClosingChar","entity","arrToStr","arr","jPath","indentation","xmlStr","isPreviousElementTag","tagObj","propName","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","attrMap","attrVal","lastIndexOf","jArray","readEntityExp","entityName","isComment","isEntity","isElement","isAttlist","isNotation","validateEntityName","hasBody","comment","exp","regx","removeNSPrefix","parseAttributeValue","numberParseOptions","hex","leadingZeros","eNotation","alwaysCreateTextNode","ignorePiTags","transformTagName","transformAttributeName","updateTag","attrs","buildOptions","xmlNode","readDocType","toNumber","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","lastTagName","propIndex","tagsNodeStack","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","addChild","endIndex","docTypeEntities","rawTagName","lastTag","isItStopNode","tagContent","readStopNodeData","child","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","str","errMsg","closingIndex","attrBoundary","closingChar","ch","tagExpWithClosingIndex","separatorIndex","search","trimStart","openTagCount","shouldParse","String","fromCharCode","Number","parseInt","OrderedObjParser","prettify","validationOption","toString","orderedObjParser","orderedResult","compress","text","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","node","hexRegex","numRegex","window","parseFloat","consider","decimalPoint","trimmedStr","skipLike","test","sign","numTrimmedByZeros","numStr","trimZeros","num"],"sourceRoot":""}