{"version":3,"file":"static/js/8111.d4e0188d.chunk.js","mappings":"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","sources":["../node_modules/@smithy/fetch-http-handler/dist-es/request-timeout.js","../node_modules/@smithy/fetch-http-handler/dist-es/fetch-http-handler.js","../node_modules/@smithy/querystring-builder/dist-es/index.js","../node_modules/@smithy/fetch-http-handler/dist-es/stream-collector.js","../node_modules/@smithy/property-provider/dist-es/ProviderError.js","../node_modules/@smithy/property-provider/dist-es/CredentialsProviderError.js","../node_modules/@smithy/property-provider/dist-es/chain.js","../node_modules/@smithy/property-provider/dist-es/memoize.js","../node_modules/@smithy/protocol-http/dist-es/extensions/httpExtensionConfiguration.js","../node_modules/@smithy/protocol-http/dist-es/httpRequest.js","../node_modules/@smithy/protocol-http/dist-es/httpResponse.js","../node_modules/@smithy/middleware-stack/dist-es/MiddlewareStack.js","../node_modules/@smithy/smithy-client/dist-es/client.js","../node_modules/@smithy/smithy-client/dist-es/collect-stream-body.js","../node_modules/@smithy/smithy-client/dist-es/command.js","../node_modules/@smithy/smithy-client/dist-es/constants.js","../node_modules/@smithy/smithy-client/dist-es/create-aggregated-client.js","../node_modules/@smithy/smithy-client/dist-es/parse-utils.js","../node_modules/@smithy/smithy-client/dist-es/date-utils.js","../node_modules/@smithy/smithy-client/dist-es/exceptions.js","../node_modules/@smithy/smithy-client/dist-es/default-error-handler.js","../node_modules/@smithy/smithy-client/dist-es/defaults-mode.js","../node_modules/@smithy/smithy-client/dist-es/extended-encode-uri-component.js","../node_modules/@smithy/smithy-client/dist-es/extensions/checksum.js","../node_modules/@smithy/smithy-client/dist-es/extensions/retry.js","../node_modules/@smithy/smithy-client/dist-es/extensions/defaultExtensionConfiguration.js","../node_modules/@smithy/smithy-client/dist-es/get-value-from-text-node.js","../node_modules/@smithy/smithy-client/dist-es/lazy-json.js","../node_modules/@smithy/smithy-client/dist-es/NoOpLogger.js","../node_modules/@smithy/smithy-client/dist-es/object-mapping.js","../node_modules/@smithy/smithy-client/dist-es/serde-json.js","../node_modules/@smithy/types/dist-es/auth/auth.js","../node_modules/@smithy/types/dist-es/auth/HttpApiKeyAuth.js","../node_modules/@smithy/types/dist-es/endpoint.js","../node_modules/@smithy/types/dist-es/extensions/checksum.js","../node_modules/@smithy/types/dist-es/http.js","../node_modules/@smithy/types/dist-es/middleware.js","../node_modules/@smithy/types/dist-es/profile.js","../node_modules/@smithy/types/dist-es/transfer.js","../node_modules/@smithy/util-base64/dist-es/constants.browser.js","../node_modules/@smithy/util-base64/dist-es/fromBase64.browser.js","../node_modules/@smithy/util-base64/dist-es/toBase64.browser.js","../node_modules/@smithy/util-hex-encoding/dist-es/index.js","../node_modules/@smithy/util-stream/dist-es/blob/Uint8ArrayBlobAdapter.js","../node_modules/@smithy/util-stream/dist-es/blob/transforms.js","../node_modules/@smithy/util-stream/dist-es/stream-type-check.js","../node_modules/@smithy/util-stream/dist-es/sdk-stream-mixin.browser.js","../node_modules/@smithy/util-uri-escape/dist-es/escape-uri.js","../node_modules/@smithy/util-utf8/dist-es/fromUtf8.browser.js","../node_modules/@smithy/util-utf8/dist-es/toUtf8.browser.js"],"sourcesContent":["export function requestTimeout(timeoutInMs = 0) {\n    return new Promise((resolve, reject) => {\n        if (timeoutInMs) {\n            setTimeout(() => {\n                const timeoutError = new Error(`Request did not complete within ${timeoutInMs} ms`);\n                timeoutError.name = \"TimeoutError\";\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n","import { HttpResponse } from \"@smithy/protocol-http\";\nimport { buildQueryString } from \"@smithy/querystring-builder\";\nimport { requestTimeout } from \"./request-timeout\";\nexport const keepAliveSupport = {\n    supported: undefined,\n};\nexport class FetchHttpHandler {\n    static create(instanceOrOptions) {\n        if (typeof instanceOrOptions?.handle === \"function\") {\n            return instanceOrOptions;\n        }\n        return new FetchHttpHandler(instanceOrOptions);\n    }\n    constructor(options) {\n        if (typeof options === \"function\") {\n            this.configProvider = options().then((opts) => opts || {});\n        }\n        else {\n            this.config = options ?? {};\n            this.configProvider = Promise.resolve(this.config);\n        }\n        if (keepAliveSupport.supported === undefined) {\n            keepAliveSupport.supported = Boolean(typeof Request !== \"undefined\" && \"keepalive\" in new Request(\"https://[::1]\"));\n        }\n    }\n    destroy() {\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        const requestTimeoutInMs = this.config.requestTimeout;\n        const keepAlive = this.config.keepAlive === true;\n        const credentials = this.config.credentials;\n        if (abortSignal?.aborted) {\n            const abortError = new Error(\"Request aborted\");\n            abortError.name = \"AbortError\";\n            return Promise.reject(abortError);\n        }\n        let path = request.path;\n        const queryString = buildQueryString(request.query || {});\n        if (queryString) {\n            path += `?${queryString}`;\n        }\n        if (request.fragment) {\n            path += `#${request.fragment}`;\n        }\n        let auth = \"\";\n        if (request.username != null || request.password != null) {\n            const username = request.username ?? \"\";\n            const password = request.password ?? \"\";\n            auth = `${username}:${password}@`;\n        }\n        const { port, method } = request;\n        const url = `${request.protocol}//${auth}${request.hostname}${port ? `:${port}` : \"\"}${path}`;\n        const body = method === \"GET\" || method === \"HEAD\" ? undefined : request.body;\n        const requestOptions = {\n            body,\n            headers: new Headers(request.headers),\n            method: method,\n            credentials,\n        };\n        if (this.config?.cache) {\n            requestOptions.cache = this.config.cache;\n        }\n        if (body) {\n            requestOptions.duplex = \"half\";\n        }\n        if (typeof AbortController !== \"undefined\") {\n            requestOptions.signal = abortSignal;\n        }\n        if (keepAliveSupport.supported) {\n            requestOptions.keepalive = keepAlive;\n        }\n        if (typeof this.config.requestInit === \"function\") {\n            Object.assign(requestOptions, this.config.requestInit(request));\n        }\n        let removeSignalEventListener = () => { };\n        const fetchRequest = new Request(url, requestOptions);\n        const raceOfPromises = [\n            fetch(fetchRequest).then((response) => {\n                const fetchHeaders = response.headers;\n                const transformedHeaders = {};\n                for (const pair of fetchHeaders.entries()) {\n                    transformedHeaders[pair[0]] = pair[1];\n                }\n                const hasReadableStream = response.body != undefined;\n                if (!hasReadableStream) {\n                    return response.blob().then((body) => ({\n                        response: new HttpResponse({\n                            headers: transformedHeaders,\n                            reason: response.statusText,\n                            statusCode: response.status,\n                            body,\n                        }),\n                    }));\n                }\n                return {\n                    response: new HttpResponse({\n                        headers: transformedHeaders,\n                        reason: response.statusText,\n                        statusCode: response.status,\n                        body: response.body,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        if (abortSignal) {\n            raceOfPromises.push(new Promise((resolve, reject) => {\n                const onAbort = () => {\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n                if (typeof abortSignal.addEventListener === \"function\") {\n                    const signal = abortSignal;\n                    signal.addEventListener(\"abort\", onAbort, { once: true });\n                    removeSignalEventListener = () => signal.removeEventListener(\"abort\", onAbort);\n                }\n                else {\n                    abortSignal.onabort = onAbort;\n                }\n            }));\n        }\n        return Promise.race(raceOfPromises).finally(removeSignalEventListener);\n    }\n    updateHttpClientConfig(key, value) {\n        this.config = undefined;\n        this.configProvider = this.configProvider.then((config) => {\n            config[key] = value;\n            return config;\n        });\n    }\n    httpHandlerConfigs() {\n        return this.config ?? {};\n    }\n}\n","import { escapeUri } from \"@smithy/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","import { fromBase64 } from \"@smithy/util-base64\";\nexport const streamCollector = (stream) => {\n    if (typeof Blob === \"function\" && stream instanceof Blob) {\n        return collectBlob(stream);\n    }\n    return collectStream(stream);\n};\nasync function collectBlob(blob) {\n    const base64 = await readToBase64(blob);\n    const arrayBuffer = fromBase64(base64);\n    return new Uint8Array(arrayBuffer);\n}\nasync function collectStream(stream) {\n    const chunks = [];\n    const reader = stream.getReader();\n    let isDone = false;\n    let length = 0;\n    while (!isDone) {\n        const { done, value } = await reader.read();\n        if (value) {\n            chunks.push(value);\n            length += value.length;\n        }\n        isDone = done;\n    }\n    const collected = new Uint8Array(length);\n    let offset = 0;\n    for (const chunk of chunks) {\n        collected.set(chunk, offset);\n        offset += chunk.length;\n    }\n    return collected;\n}\nfunction readToBase64(blob) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n            if (reader.readyState !== 2) {\n                return reject(new Error(\"Reader aborted too early\"));\n            }\n            const result = (reader.result ?? \"\");\n            const commaIndex = result.indexOf(\",\");\n            const dataOffset = commaIndex > -1 ? commaIndex + 1 : result.length;\n            resolve(result.substring(dataOffset));\n        };\n        reader.onabort = () => reject(new Error(\"Read aborted\"));\n        reader.onerror = () => reject(reader.error);\n        reader.readAsDataURL(blob);\n    });\n}\n","export class ProviderError extends Error {\n    constructor(message, options = true) {\n        let logger;\n        let tryNextLink = true;\n        if (typeof options === \"boolean\") {\n            logger = undefined;\n            tryNextLink = options;\n        }\n        else if (options != null && typeof options === \"object\") {\n            logger = options.logger;\n            tryNextLink = options.tryNextLink ?? true;\n        }\n        super(message);\n        this.name = \"ProviderError\";\n        this.tryNextLink = tryNextLink;\n        Object.setPrototypeOf(this, ProviderError.prototype);\n        logger?.debug?.(`@smithy/property-provider ${tryNextLink ? \"->\" : \"(!)\"} ${message}`);\n    }\n    static from(error, options = true) {\n        return Object.assign(new this(error.message, options), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, options = true) {\n        super(message, options);\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport const chain = (...providers) => async () => {\n    if (providers.length === 0) {\n        throw new ProviderError(\"No providers in chain\");\n    }\n    let lastProviderError;\n    for (const provider of providers) {\n        try {\n            const credentials = await provider();\n            return credentials;\n        }\n        catch (err) {\n            lastProviderError = err;\n            if (err?.tryNextLink) {\n                continue;\n            }\n            throw err;\n        }\n    }\n    throw lastProviderError;\n};\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","export const getHttpHandlerExtensionConfiguration = (runtimeConfig) => {\n    let httpHandler = runtimeConfig.httpHandler;\n    return {\n        setHttpHandler(handler) {\n            httpHandler = handler;\n        },\n        httpHandler() {\n            return httpHandler;\n        },\n        updateHttpClientConfig(key, value) {\n            httpHandler.updateHttpClientConfig(key, value);\n        },\n        httpHandlerConfigs() {\n            return httpHandler.httpHandlerConfigs();\n        },\n    };\n};\nexport const resolveHttpHandlerRuntimeConfig = (httpHandlerExtensionConfiguration) => {\n    return {\n        httpHandler: httpHandlerExtensionConfiguration.httpHandler(),\n    };\n};\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n        this.username = options.username;\n        this.password = options.password;\n        this.fragment = options.fragment;\n    }\n    static clone(request) {\n        const cloned = new HttpRequest({\n            ...request,\n            headers: { ...request.headers },\n        });\n        if (cloned.query) {\n            cloned.query = cloneQuery(cloned.query);\n        }\n        return cloned;\n    }\n    static isInstance(request) {\n        if (!request) {\n            return false;\n        }\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        return HttpRequest.clone(this);\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.reason = options.reason;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","const getAllAliases = (name, aliases) => {\n    const _aliases = [];\n    if (name) {\n        _aliases.push(name);\n    }\n    if (aliases) {\n        for (const alias of aliases) {\n            _aliases.push(alias);\n        }\n    }\n    return _aliases;\n};\nconst getMiddlewareNameWithAliases = (name, aliases) => {\n    return `${name || \"anonymous\"}${aliases && aliases.length > 0 ? ` (a.k.a. ${aliases.join(\",\")})` : \"\"}`;\n};\nexport const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    let identifyOnResolve = false;\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            const aliases = getAllAliases(entry.name, entry.aliases);\n            if (aliases.includes(toRemove)) {\n                isRemoved = true;\n                for (const alias of aliases) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                for (const alias of getAllAliases(entry.name, entry.aliases)) {\n                    entriesNameSet.delete(alias);\n                }\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        toStack.identifyOnResolve?.(stack.identifyOnResolve());\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            for (const alias of getAllAliases(normalizedEntry.name, normalizedEntry.aliases)) {\n                normalizedEntriesNameMap[alias] = normalizedEntry;\n            }\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ` +\n                        `${getMiddlewareNameWithAliases(entry.name, entry.aliases)} ` +\n                        `middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expandedMiddlewareList) => {\n            wholeList.push(...expandedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = absoluteEntries[toOverrideIndex];\n                        if (toOverride.step !== entry.step || entry.priority !== toOverride.priority) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware with ` +\n                                `${toOverride.priority} priority in ${toOverride.step} step cannot ` +\n                                `be overridden by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware with ` +\n                                `${entry.priority} priority in ${entry.step} step.`);\n                        }\n                        absoluteEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override, aliases: _aliases } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            const aliases = getAllAliases(name, _aliases);\n            if (aliases.length > 0) {\n                if (aliases.some((alias) => entriesNameSet.has(alias))) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${getMiddlewareNameWithAliases(name, _aliases)}'`);\n                    for (const alias of aliases) {\n                        const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === alias || entry.aliases?.some((a) => a === alias));\n                        if (toOverrideIndex === -1) {\n                            continue;\n                        }\n                        const toOverride = relativeEntries[toOverrideIndex];\n                        if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                            throw new Error(`\"${getMiddlewareNameWithAliases(toOverride.name, toOverride.aliases)}\" middleware ` +\n                                `${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                                `by \"${getMiddlewareNameWithAliases(name, _aliases)}\" middleware ${entry.relation} ` +\n                                `\"${entry.toMiddleware}\" middleware.`);\n                        }\n                        relativeEntries.splice(toOverrideIndex, 1);\n                    }\n                }\n                for (const alias of aliases) {\n                    entriesNameSet.add(alias);\n                }\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name, aliases: _aliases } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    const aliases = getAllAliases(name, _aliases);\n                    for (const alias of aliases) {\n                        entriesNameSet.delete(alias);\n                    }\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            cloned.identifyOnResolve(identifyOnResolve || cloned.identifyOnResolve() || (from.identifyOnResolve?.() ?? false));\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                const step = mw.step ??\n                    mw.relation +\n                        \" \" +\n                        mw.toMiddleware;\n                return getMiddlewareNameWithAliases(mw.name, mw.aliases) + \" - \" + step;\n            });\n        },\n        identifyOnResolve(toggle) {\n            if (typeof toggle === \"boolean\")\n                identifyOnResolve = toggle;\n            return identifyOnResolve;\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            if (identifyOnResolve) {\n                console.log(stack.identify());\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.config = config;\n        this.middlewareStack = constructStack();\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const useHandlerCache = options === undefined && this.config.cacheMiddleware === true;\n        let handler;\n        if (useHandlerCache) {\n            if (!this.handlers) {\n                this.handlers = new WeakMap();\n            }\n            const handlers = this.handlers;\n            if (handlers.has(command.constructor)) {\n                handler = handlers.get(command.constructor);\n            }\n            else {\n                handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n                handlers.set(command.constructor, handler);\n            }\n        }\n        else {\n            delete this.handlers;\n            handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        }\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        this.config?.requestHandler?.destroy?.();\n        delete this.handlers;\n    }\n}\n","import { Uint8ArrayBlobAdapter } from \"@smithy/util-stream\";\nexport const collectBody = async (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Uint8ArrayBlobAdapter.mutate(streamBody);\n    }\n    if (!streamBody) {\n        return Uint8ArrayBlobAdapter.mutate(new Uint8Array());\n    }\n    const fromContext = context.streamCollector(streamBody);\n    return Uint8ArrayBlobAdapter.mutate(await fromContext);\n};\n","import { constructStack } from \"@smithy/middleware-stack\";\nimport { SMITHY_CONTEXT_KEY } from \"@smithy/types\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n    static classBuilder() {\n        return new ClassBuilder();\n    }\n    resolveMiddlewareWithContext(clientStack, configuration, options, { middlewareFn, clientName, commandName, inputFilterSensitiveLog, outputFilterSensitiveLog, smithyContext, additionalContext, CommandCtor, }) {\n        for (const mw of middlewareFn.bind(this)(CommandCtor, clientStack, configuration, options)) {\n            this.middlewareStack.use(mw);\n        }\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog,\n            outputFilterSensitiveLog,\n            [SMITHY_CONTEXT_KEY]: {\n                commandInstance: this,\n                ...smithyContext,\n            },\n            ...additionalContext,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n}\nclass ClassBuilder {\n    constructor() {\n        this._init = () => { };\n        this._ep = {};\n        this._middlewareFn = () => [];\n        this._commandName = \"\";\n        this._clientName = \"\";\n        this._additionalContext = {};\n        this._smithyContext = {};\n        this._inputFilterSensitiveLog = (_) => _;\n        this._outputFilterSensitiveLog = (_) => _;\n        this._serializer = null;\n        this._deserializer = null;\n    }\n    init(cb) {\n        this._init = cb;\n    }\n    ep(endpointParameterInstructions) {\n        this._ep = endpointParameterInstructions;\n        return this;\n    }\n    m(middlewareSupplier) {\n        this._middlewareFn = middlewareSupplier;\n        return this;\n    }\n    s(service, operation, smithyContext = {}) {\n        this._smithyContext = {\n            service,\n            operation,\n            ...smithyContext,\n        };\n        return this;\n    }\n    c(additionalContext = {}) {\n        this._additionalContext = additionalContext;\n        return this;\n    }\n    n(clientName, commandName) {\n        this._clientName = clientName;\n        this._commandName = commandName;\n        return this;\n    }\n    f(inputFilter = (_) => _, outputFilter = (_) => _) {\n        this._inputFilterSensitiveLog = inputFilter;\n        this._outputFilterSensitiveLog = outputFilter;\n        return this;\n    }\n    ser(serializer) {\n        this._serializer = serializer;\n        return this;\n    }\n    de(deserializer) {\n        this._deserializer = deserializer;\n        return this;\n    }\n    build() {\n        const closure = this;\n        let CommandRef;\n        return (CommandRef = class extends Command {\n            static getEndpointParameterInstructions() {\n                return closure._ep;\n            }\n            constructor(...[input]) {\n                super();\n                this.serialize = closure._serializer;\n                this.deserialize = closure._deserializer;\n                this.input = input ?? {};\n                closure._init(this);\n            }\n            resolveMiddleware(stack, configuration, options) {\n                return this.resolveMiddlewareWithContext(stack, configuration, options, {\n                    CommandCtor: CommandRef,\n                    middlewareFn: closure._middlewareFn,\n                    clientName: closure._clientName,\n                    commandName: closure._commandName,\n                    inputFilterSensitiveLog: closure._inputFilterSensitiveLog,\n                    outputFilterSensitiveLog: closure._outputFilterSensitiveLog,\n                    smithyContext: closure._smithyContext,\n                    additionalContext: closure._additionalContext,\n                });\n            }\n        });\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export const createAggregatedClient = (commands, Client) => {\n    for (const command of Object.keys(commands)) {\n        const CommandCtor = commands[command];\n        const methodImpl = async function (args, optionsOrCb, cb) {\n            const command = new CommandCtor(args);\n            if (typeof optionsOrCb === \"function\") {\n                this.send(command, optionsOrCb);\n            }\n            else if (typeof cb === \"function\") {\n                if (typeof optionsOrCb !== \"object\")\n                    throw new Error(`Expected http options but got ${typeof optionsOrCb}`);\n                this.send(command, optionsOrCb || {}, cb);\n            }\n            else {\n                return this.send(command, optionsOrCb);\n            }\n        };\n        const methodName = (command[0].toLowerCase() + command.slice(1)).replace(/Command$/, \"\");\n        Client.prototype[methodName] = methodImpl;\n    }\n};\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else if (typeof value === \"object\" && value.tag === 1) {\n        valueAsDouble = value.value;\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","import { AlgorithmId } from \"@smithy/types\";\nexport { AlgorithmId };\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    for (const id in AlgorithmId) {\n        const algorithmId = AlgorithmId[id];\n        if (runtimeConfig[algorithmId] === undefined) {\n            continue;\n        }\n        checksumAlgorithms.push({\n            algorithmId: () => algorithmId,\n            checksumConstructor: () => runtimeConfig[algorithmId],\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export const getRetryConfiguration = (runtimeConfig) => {\n    let _retryStrategy = runtimeConfig.retryStrategy;\n    return {\n        setRetryStrategy(retryStrategy) {\n            _retryStrategy = retryStrategy;\n        },\n        retryStrategy() {\n            return _retryStrategy;\n        },\n    };\n};\nexport const resolveRetryRuntimeConfig = (retryStrategyConfiguration) => {\n    const runtimeConfig = {};\n    runtimeConfig.retryStrategy = retryStrategyConfiguration.retryStrategy();\n    return runtimeConfig;\n};\n","import { getChecksumConfiguration, resolveChecksumRuntimeConfig } from \"./checksum\";\nimport { getRetryConfiguration, resolveRetryRuntimeConfig } from \"./retry\";\nexport const getDefaultExtensionConfiguration = (runtimeConfig) => {\n    return {\n        ...getChecksumConfiguration(runtimeConfig),\n        ...getRetryConfiguration(runtimeConfig),\n    };\n};\nexport const getDefaultClientConfiguration = getDefaultExtensionConfiguration;\nexport const resolveDefaultRuntimeConfig = (config) => {\n    return {\n        ...resolveChecksumRuntimeConfig(config),\n        ...resolveRetryRuntimeConfig(config),\n    };\n};\n","export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null).map(_json);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n","export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var HttpApiKeyAuthLocation;\n(function (HttpApiKeyAuthLocation) {\n    HttpApiKeyAuthLocation[\"HEADER\"] = \"header\";\n    HttpApiKeyAuthLocation[\"QUERY\"] = \"query\";\n})(HttpApiKeyAuthLocation || (HttpApiKeyAuthLocation = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","export var AlgorithmId;\n(function (AlgorithmId) {\n    AlgorithmId[\"MD5\"] = \"md5\";\n    AlgorithmId[\"CRC32\"] = \"crc32\";\n    AlgorithmId[\"CRC32C\"] = \"crc32c\";\n    AlgorithmId[\"SHA1\"] = \"sha1\";\n    AlgorithmId[\"SHA256\"] = \"sha256\";\n})(AlgorithmId || (AlgorithmId = {}));\nexport const getChecksumConfiguration = (runtimeConfig) => {\n    const checksumAlgorithms = [];\n    if (runtimeConfig.sha256 !== undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.SHA256,\n            checksumConstructor: () => runtimeConfig.sha256,\n        });\n    }\n    if (runtimeConfig.md5 != undefined) {\n        checksumAlgorithms.push({\n            algorithmId: () => AlgorithmId.MD5,\n            checksumConstructor: () => runtimeConfig.md5,\n        });\n    }\n    return {\n        _checksumAlgorithms: checksumAlgorithms,\n        addChecksumAlgorithm(algo) {\n            this._checksumAlgorithms.push(algo);\n        },\n        checksumAlgorithms() {\n            return this._checksumAlgorithms;\n        },\n    };\n};\nexport const resolveChecksumRuntimeConfig = (clientConfig) => {\n    const runtimeConfig = {};\n    clientConfig.checksumAlgorithms().forEach((checksumAlgorithm) => {\n        runtimeConfig[checksumAlgorithm.algorithmId()] = checksumAlgorithm.checksumConstructor();\n    });\n    return runtimeConfig;\n};\n","export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n","export const SMITHY_CONTEXT_KEY = \"__smithy_context\";\n","export var IniSectionType;\n(function (IniSectionType) {\n    IniSectionType[\"PROFILE\"] = \"profile\";\n    IniSectionType[\"SSO_SESSION\"] = \"sso-session\";\n    IniSectionType[\"SERVICES\"] = \"services\";\n})(IniSectionType || (IniSectionType = {}));\n","export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n","const alphabetByEncoding = {};\nconst alphabetByValue = new Array(64);\nfor (let i = 0, start = \"A\".charCodeAt(0), limit = \"Z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    alphabetByEncoding[char] = i;\n    alphabetByValue[i] = char;\n}\nfor (let i = 0, start = \"a\".charCodeAt(0), limit = \"z\".charCodeAt(0); i + start <= limit; i++) {\n    const char = String.fromCharCode(i + start);\n    const index = i + 26;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nfor (let i = 0; i < 10; i++) {\n    alphabetByEncoding[i.toString(10)] = i + 52;\n    const char = i.toString(10);\n    const index = i + 52;\n    alphabetByEncoding[char] = index;\n    alphabetByValue[index] = char;\n}\nalphabetByEncoding[\"+\"] = 62;\nalphabetByValue[62] = \"+\";\nalphabetByEncoding[\"/\"] = 63;\nalphabetByValue[63] = \"/\";\nconst bitsPerLetter = 6;\nconst bitsPerByte = 8;\nconst maxLetterValue = 0b111111;\nexport { alphabetByEncoding, alphabetByValue, bitsPerLetter, bitsPerByte, maxLetterValue };\n","import { alphabetByEncoding, bitsPerByte, bitsPerLetter } from \"./constants.browser\";\nexport const fromBase64 = (input) => {\n    let totalByteLength = (input.length / 4) * 3;\n    if (input.slice(-2) === \"==\") {\n        totalByteLength -= 2;\n    }\n    else if (input.slice(-1) === \"=\") {\n        totalByteLength--;\n    }\n    const out = new ArrayBuffer(totalByteLength);\n    const dataView = new DataView(out);\n    for (let i = 0; i < input.length; i += 4) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = i + 3; j <= limit; j++) {\n            if (input[j] !== \"=\") {\n                if (!(input[j] in alphabetByEncoding)) {\n                    throw new TypeError(`Invalid character ${input[j]} in base64 string.`);\n                }\n                bits |= alphabetByEncoding[input[j]] << ((limit - j) * bitsPerLetter);\n                bitLength += bitsPerLetter;\n            }\n            else {\n                bits >>= bitsPerLetter;\n            }\n        }\n        const chunkOffset = (i / 4) * 3;\n        bits >>= bitLength % bitsPerByte;\n        const byteLength = Math.floor(bitLength / bitsPerByte);\n        for (let k = 0; k < byteLength; k++) {\n            const offset = (byteLength - k - 1) * bitsPerByte;\n            dataView.setUint8(chunkOffset + k, (bits & (255 << offset)) >> offset);\n        }\n    }\n    return new Uint8Array(out);\n};\n","import { fromUtf8 } from \"@smithy/util-utf8\";\nimport { alphabetByValue, bitsPerByte, bitsPerLetter, maxLetterValue } from \"./constants.browser\";\nexport function toBase64(_input) {\n    let input;\n    if (typeof _input === \"string\") {\n        input = fromUtf8(_input);\n    }\n    else {\n        input = _input;\n    }\n    const isArrayLike = typeof input === \"object\" && typeof input.length === \"number\";\n    const isUint8Array = typeof input === \"object\" &&\n        typeof input.byteOffset === \"number\" &&\n        typeof input.byteLength === \"number\";\n    if (!isArrayLike && !isUint8Array) {\n        throw new Error(\"@smithy/util-base64: toBase64 encoder function only accepts string | Uint8Array.\");\n    }\n    let str = \"\";\n    for (let i = 0; i < input.length; i += 3) {\n        let bits = 0;\n        let bitLength = 0;\n        for (let j = i, limit = Math.min(i + 3, input.length); j < limit; j++) {\n            bits |= input[j] << ((limit - j - 1) * bitsPerByte);\n            bitLength += bitsPerByte;\n        }\n        const bitClusterCount = Math.ceil(bitLength / bitsPerLetter);\n        bits <<= bitClusterCount * bitsPerLetter - bitLength;\n        for (let k = 1; k <= bitClusterCount; k++) {\n            const offset = (bitClusterCount - k) * bitsPerLetter;\n            str += alphabetByValue[(bits & (maxLetterValue << offset)) >> offset];\n        }\n        str += \"==\".slice(0, 4 - bitClusterCount);\n    }\n    return str;\n}\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","import { transformFromString, transformToString } from \"./transforms\";\nexport class Uint8ArrayBlobAdapter extends Uint8Array {\n    static fromString(source, encoding = \"utf-8\") {\n        switch (typeof source) {\n            case \"string\":\n                return transformFromString(source, encoding);\n            default:\n                throw new Error(`Unsupported conversion from ${typeof source} to Uint8ArrayBlobAdapter.`);\n        }\n    }\n    static mutate(source) {\n        Object.setPrototypeOf(source, Uint8ArrayBlobAdapter.prototype);\n        return source;\n    }\n    transformToString(encoding = \"utf-8\") {\n        return transformToString(this, encoding);\n    }\n}\n","import { fromBase64, toBase64 } from \"@smithy/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@smithy/util-utf8\";\nimport { Uint8ArrayBlobAdapter } from \"./Uint8ArrayBlobAdapter\";\nexport function transformToString(payload, encoding = \"utf-8\") {\n    if (encoding === \"base64\") {\n        return toBase64(payload);\n    }\n    return toUtf8(payload);\n}\nexport function transformFromString(str, encoding) {\n    if (encoding === \"base64\") {\n        return Uint8ArrayBlobAdapter.mutate(fromBase64(str));\n    }\n    return Uint8ArrayBlobAdapter.mutate(fromUtf8(str));\n}\n","export const isReadableStream = (stream) => typeof ReadableStream === \"function\" &&\n    (stream?.constructor?.name === ReadableStream.name || stream instanceof ReadableStream);\n","import { streamCollector } from \"@smithy/fetch-http-handler\";\nimport { toBase64 } from \"@smithy/util-base64\";\nimport { toHex } from \"@smithy/util-hex-encoding\";\nimport { toUtf8 } from \"@smithy/util-utf8\";\nimport { isReadableStream } from \"./stream-type-check\";\nconst ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED = \"The stream has already been transformed.\";\nexport const sdkStreamMixin = (stream) => {\n    if (!isBlobInstance(stream) && !isReadableStream(stream)) {\n        const name = stream?.__proto__?.constructor?.name || stream;\n        throw new Error(`Unexpected stream implementation, expect Blob or ReadableStream, got ${name}`);\n    }\n    let transformed = false;\n    const transformToByteArray = async () => {\n        if (transformed) {\n            throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n        }\n        transformed = true;\n        return await streamCollector(stream);\n    };\n    const blobToWebStream = (blob) => {\n        if (typeof blob.stream !== \"function\") {\n            throw new Error(\"Cannot transform payload Blob to web stream. Please make sure the Blob.stream() is polyfilled.\\n\" +\n                \"If you are using React Native, this API is not yet supported, see: https://react-native.canny.io/feature-requests/p/fetch-streaming-body\");\n        }\n        return blob.stream();\n    };\n    return Object.assign(stream, {\n        transformToByteArray: transformToByteArray,\n        transformToString: async (encoding) => {\n            const buf = await transformToByteArray();\n            if (encoding === \"base64\") {\n                return toBase64(buf);\n            }\n            else if (encoding === \"hex\") {\n                return toHex(buf);\n            }\n            else if (encoding === undefined || encoding === \"utf8\" || encoding === \"utf-8\") {\n                return toUtf8(buf);\n            }\n            else if (typeof TextDecoder === \"function\") {\n                return new TextDecoder(encoding).decode(buf);\n            }\n            else {\n                throw new Error(\"TextDecoder is not available, please make sure polyfill is provided.\");\n            }\n        },\n        transformToWebStream: () => {\n            if (transformed) {\n                throw new Error(ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED);\n            }\n            transformed = true;\n            if (isBlobInstance(stream)) {\n                return blobToWebStream(stream);\n            }\n            else if (isReadableStream(stream)) {\n                return stream;\n            }\n            else {\n                throw new Error(`Cannot transform payload to web stream, got ${stream}`);\n            }\n        },\n    });\n};\nconst isBlobInstance = (stream) => typeof Blob === \"function\" && stream instanceof Blob;\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","export const fromUtf8 = (input) => new TextEncoder().encode(input);\n","export const toUtf8 = (input) => {\n    if (typeof input === \"string\") {\n        return input;\n    }\n    if (typeof input !== \"object\" || typeof input.byteOffset !== \"number\" || typeof input.byteLength !== \"number\") {\n        throw new Error(\"@smithy/util-utf8: toUtf8 encoder function only accepts string | Uint8Array.\");\n    }\n    return new TextDecoder(\"utf-8\").decode(input);\n};\n"],"names":["requestTimeout","timeoutInMs","arguments","length","undefined","Promise","resolve","reject","setTimeout","timeoutError","Error","concat","name","keepAliveSupport","supported","FetchHttpHandler","create","instanceOrOptions","handle","constructor","options","this","configProvider","then","opts","config","Boolean","Request","destroy","request","_this$config","abortSignal","requestTimeoutInMs","keepAlive","credentials","aborted","abortError","path","queryString","query","parts","key","Object","keys","sort","value","escapeUri","Array","isArray","i","iLen","push","qsEntry","join","buildQueryString","fragment","auth","username","password","_request$username","_request$password","port","method","url","protocol","hostname","body","requestOptions","headers","Headers","cache","duplex","AbortController","signal","keepalive","requestInit","assign","removeSignalEventListener","fetchRequest","raceOfPromises","fetch","response","fetchHeaders","transformedHeaders","pair","entries","HttpResponse","reason","statusText","statusCode","status","blob","onAbort","addEventListener","once","removeEventListener","onabort","race","finally","updateHttpClientConfig","httpHandlerConfigs","_this$config2","streamCollector","stream","Blob","async","base64","reader","FileReader","onloadend","_reader$result","readyState","result","commaIndex","indexOf","dataOffset","substring","onerror","error","readAsDataURL","readToBase64","arrayBuffer","fromBase64","Uint8Array","collectBlob","chunks","getReader","isDone","done","read","collected","offset","chunk","set","collectStream","ProviderError","message","_logger","_logger$debug","logger","tryNextLink","_options$tryNextLink","super","setPrototypeOf","prototype","debug","call","from","CredentialsProviderError","memoize","provider","isExpired","requiresRefresh","resolved","pending","hasResult","isConstant","coalesceProvider","forceRefresh","getHttpHandlerExtensionConfiguration","runtimeConfig","httpHandler","setHttpHandler","handler","resolveHttpHandlerRuntimeConfig","httpHandlerExtensionConfiguration","HttpRequest","slice","charAt","clone","cloned","reduce","carry","paramName","param","isInstance","req","resp","getAllAliases","aliases","_aliases","alias","getMiddlewareNameWithAliases","constructStack","absoluteEntries","relativeEntries","identifyOnResolve","entriesNameSet","Set","cloneTo","toStack","_toStack$identifyOnRe","forEach","entry","add","middleware","addRelativeTo","stack","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","reverse","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","toMiddleware","relation","a","b","stepWeights","step","priorityWeights","priority","map","wholeList","override","some","has","toOverrideIndex","findIndex","_entry$aliases","toOverride","splice","_entry$aliases2","use","plugin","applyToStack","remove","toRemove","isRemoved","filterCb","includes","delete","filter","removeByName","removeByReference","removeByTag","tags","_from$identifyOnResol","_from$identifyOnResol2","identify","mw","_mw$step","toggle","context","console","log","initialize","serialize","build","finalizeRequest","deserialize","high","normal","low","Client","middlewareStack","send","command","optionsOrCb","cb","callback","cacheMiddleware","handlers","WeakMap","get","resolveMiddleware","output","err","catch","_this$config$destroy","requestHandler","collectBody","streamBody","Uint8ArrayBlobAdapter","mutate","fromContext","Command","classBuilder","ClassBuilder","resolveMiddlewareWithContext","clientStack","configuration","_ref","middlewareFn","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","smithyContext","additionalContext","CommandCtor","bind","handlerExecutionContext","SMITHY_CONTEXT_KEY","commandInstance","_init","_ep","_middlewareFn","_commandName","_clientName","_additionalContext","_smithyContext","_inputFilterSensitiveLog","_","_outputFilterSensitiveLog","_serializer","_deserializer","init","ep","endpointParameterInstructions","m","middlewareSupplier","s","service","operation","c","n","f","inputFilter","outputFilter","ser","serializer","de","deserializer","closure","CommandRef","getEndpointParameterInstructions","_len","_ref2","_key","input","SENSITIVE_STRING","createAggregatedClient","commands","methodImpl","args","methodName","toLowerCase","replace","expectBoolean","warn","stackTraceWarning","lower","TypeError","expectNumber","parsed","parseFloat","Number","isNaN","String","MAX_FLOAT","Math","ceil","expectFloat32","expected","Infinity","abs","expectLong","isInteger","expectInt32","expectSizedInt","expectShort","expectByte","size","castInt","Int32Array","of","Int16Array","Int8Array","expectNonNull","location","expectString","strictParseDouble","parseNumber","NUMBER_REGEX","matches","match","strictParseInt32","strictParseShort","split","MONTHS","RFC3339","RegExp","parseRfc3339DateTime","exec","yearStr","monthStr","dayStr","hours","minutes","seconds","fractionalMilliseconds","year","stripLeadingZeroes","month","parseDateValue","day","buildDate","RFC3339_WITH_OFFSET","parseRfc3339DateTimeWithOffset","offsetStr","date","toUpperCase","setTime","getTime","parseOffsetToMilliseconds","parseEpochTimestamp","valueAsDouble","tag","Date","round","time","adjustedMonth","validateDayOfMonth","UTC","parseMilliseconds","DAYS_IN_MONTH","maxDays","isLeapYear","type","upper","dateVal","strictParseByte","strictParseFloat32","directionStr","direction","idx","ServiceException","$fault","$metadata","decorateServiceException","exception","additions","v","k","Message","withBaseException","ExceptionCtor","parsedBody","errorCode","exceptionCtor","deserializeMetadata","httpStatusCode","code","Code","throwDefaultError","_ref3","_output$headers$xAmz","requestId","extendedRequestId","cfId","loadConfigsForDefaultMode","mode","retryMode","connectionTimeout","extendedEncodeURIComponent","str","encodeURIComponent","charCodeAt","toString","getChecksumConfiguration","checksumAlgorithms","id","AlgorithmId","algorithmId","checksumConstructor","_checksumAlgorithms","addChecksumAlgorithm","algo","resolveChecksumRuntimeConfig","clientConfig","checksumAlgorithm","getRetryConfiguration","_retryStrategy","retryStrategy","setRetryStrategy","resolveRetryRuntimeConfig","retryStrategyConfiguration","getDefaultExtensionConfiguration","resolveDefaultRuntimeConfig","getValueFromTextNode","obj","textNodeName","hasOwnProperty","StringWrapper","Class","getPrototypeOf","instance","Function","apply","enumerable","writable","configurable","NoOpLogger","trace","info","take","source","instructions","out","applyInstruction","target","targetKey","instruction","nonNullish","valueFn","pass","sourceKey","_value","defaultFilterPassed","customFilterPassed","_json","HttpAuthLocation","HttpApiKeyAuthLocation","EndpointURLScheme","FieldPosition","IniSectionType","RequestHandlerProtocol","alphabetByEncoding","alphabetByValue","start","limit","char","fromCharCode","index","bitsPerLetter","bitsPerByte","maxLetterValue","totalByteLength","ArrayBuffer","dataView","DataView","bits","bitLength","j","chunkOffset","byteLength","floor","setUint8","toBase64","_input","fromUtf8","isArrayLike","isUint8Array","byteOffset","min","bitClusterCount","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","fromHex","encoded","toHex","bytes","fromString","encoding","transformFromString","transformToString","payload","toUtf8","isReadableStream","_stream$constructor","ReadableStream","ERR_MSG_STREAM_HAS_BEEN_TRANSFORMED","sdkStreamMixin","isBlobInstance","_stream$__proto__","__proto__","transformed","transformToByteArray","buf","TextDecoder","decode","transformToWebStream","blobToWebStream","uri","hexEncode","TextEncoder","encode"],"sourceRoot":""}